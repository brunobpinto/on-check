@page "/signup"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OnCheck</title>
    <link rel="stylesheet" href="css/SignUpPage.css" />
</head>



<div class="signup-container d-flex justify-content-center align-items-start">
    <!-- Formulário -->
    <div class="signup-form me-5">
        <h2 class="signup-title mb-4">Sign Up</h2>

        <div class="mb-3">
            <label class="form-label">First Name</label>
            <input class="form-control" @bind="firstName" />
        </div>

        <div class="mb-3">
            <label class="form-label">Last Name</label>
            <input class="form-control" @bind="lastName" />
        </div>

        <div class="mb-3">
            <label class="form-label">Username</label>
            <input class="form-control" @bind="username" />
        </div>

        <div class="mb-3">
            <label class="form-label">Password</label>
            <input type="password" class="form-control" @bind="password" />
        </div>

        <button class="btn btn-primary w-100" @onclick="SignUp">Cadastrar</button>
    </div>

    <!-- Vídeo -->
    <div class="signup-video">
        <video autoplay muted loop class="rounded signup-video-element">
            <source src="media/OnCheckGetStartedAnimation.mp4" type="video/mp4" />
            Your browser does not support the video tag.
        </video>
    </div>
</div>


@code {
    private string firstName = string.Empty;
    private string lastName = string.Empty;
    private string username = string.Empty;
    private string password = string.Empty;

    private async Task SignUp()
    {
        var newUser = new User
        {
            FirstName = firstName,
            LastName = lastName,
            Username = username,
            Password = password
        };

        var response = await Http.PostAsJsonAsync("api/users", newUser);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/tasks");
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Erro ao cadastrar usuário.");
        }
    }

    [Inject] IJSRuntime JS { get; set; } = default!;

    public class User
    {
        public int Id { get; set; }
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}